# - Unable to get the prefix wildcard to work in the trigger branch include list, e.g. 'release-*' or 'release*' is invalid.
#   - Microsoft appear to force a branch naming based on '/', e.g. 'release/*' okay, 'release-*' not okay.
#   - This means that as we make new major level releases we will have to manually add those branches (or adopt Microsoft's policy).
# - 'failOnStdErr' flags unimportant things that are written to stderr, so cannot easily be enabled.
#   - This means that if one command fails it will proceed onto the next and fail that.
# - The Wine build docker image is specified by hash, with the intent that it ensures that what we get is what we uploaded to Docker Hub.
#   - Also tying it to the hash, ensures historical reproducibility and failure will be indicated by Docker image availability.
# - MacOS build errors in Calin's QR reader.

trigger:
  batch: false
  branches:
    include:
    - master
    - release-1.0

pr:
- master
- release-1.0

jobs:
- job: BuildLinuxBasedWindows
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.6
      addToPath: true
      architecture: x64
  - script: |
      sudo docker pull $(imageName)
      sudo docker run --name electrumsv-wine-builder-cont -v $PWD:/opt/wine64/drive_c/electrum --rm --workdir /opt/wine64/drive_c/electrum/contrib/build-wine $(imageName) ./build.sh
      pushd contrib/build-wine/dist
      # We cannot write to the 'dist' directory, so need to write them elsewhere.
      sha256sum *.exe > $(Build.Repository.LocalPath)/windows-hashes.txt
      popd
    displayName: 'Windows build'
    enabled: false
    continueOnError: false
    failOnStderr: false
  - task: CopyFiles@2
    inputs:
      contents: |
        windows-hashes.txt
        contrib/build-wine/dist/?(*.exe|*.txt)
      targetFolder: $(Build.ArtifactStagingDirectory)
      flattenFolders: true
      OverWrite: true
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'Windows build files'
      targetPath: $(Build.ArtifactStagingDirectory)
  variables:
    imageName: 'docker.io/electrumsv/electrumsv-wine-builder-img@sha256:8274d555237fc569f032006eccb7d76c1e2e4c9d9ca420d98a00efb527cce46e'
- job: BuildPythonPackages
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.6
      addToPath: true
      architecture: x64
  - script: |
      sudo pip3 install --upgrade pip setuptools wheel
      ./contrib/make_packages
      ./contrib/make_tgz
      pushd dist
      sha256sum * > package-hashes.txt
      popd
    displayName: 'Build Python packages'
    enabled: false
    continueOnError: false
    failOnStderr: false
  - task: CopyFiles@2
    inputs:
      contents: dist/?(*.zip|*.gz|*.txt)
      targetFolder: $(Build.ArtifactStagingDirectory)
      flattenFolders: true
      OverWrite: true
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'Python package files'
      targetPath: $(Build.ArtifactStagingDirectory)
- job: BuildMacOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.6
      addToPath: true
      architecture: x64
  - script: |
      xcrun --sdk macosx --show-sdk-version
      ls -la /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/
      sudo pip3 install --upgrade pip setuptools wheel
      brew install gettext && brew link gettext --force
      ./contrib/osx/make_osx
    enabled: true
    continueOnError: false
    failOnStderr: false
    displayName: 'Build MacOS binaries'
